apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    io.fossology.service: agent
    agent.type: ununpack
  name: ununpack
spec:
  replicas: 1
  selector:
    matchLabels:
      io.fossology.service: agent
      agent.type: ununpack
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.fossology.service: agent
        agent.type: ununpack
    spec:
      hostname: ununpack
      subdomain: agent-svc
      containers:
        - args:
            - agent
          env:
            - name: FOSSOLOGY_DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: fossology
                  key: FOSSOLOGY_DB_HOST
            - name: FOSSOLOGY_DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: db
                  key: POSTGRES_DB
            - name: FOSSOLOGY_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: POSTGRES_PASSWORD
            - name: FOSSOLOGY_DB_USER
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: POSTGRES_USER
            - name: FOSSOLOGY_SCHEDULER_HOST
              valueFrom:
                configMapKeyRef:
                  name: fossology
                  key: FOSSOLOGY_SCHEDULER_HOST
          image: fossology:ununpack
          imagePullPolicy: Never
          # command: ["/bin/sh", "-ec", "sleep infinity"]
          # command: ["/usr/sbin/sshd" , "-D"]
          name: ununpack
          resources: {}
      restartPolicy: Always
status: {}
